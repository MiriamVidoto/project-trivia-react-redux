{"version":3,"sources":["trivia.png","components/Header.js","pages/Feedback.js","redux/actions/index.js","pages/Game.js","pages/Login.js","pages/Ranking.js","pages/Settings.js","App.js","redux/reducers/playReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","Header","getGravatarEmail","email","md5","toString","this","props","name","score","className","data-testid","src","alt","Component","connect","store","player","gravatarEmail","Feedback","assertions","history","assert","type","onClick","push","React","getApi","payload","Game","fetchQuestions","a","token","localStorage","getItem","setState","redirect","fetch","response","json","questions","results","response_code","responseNumber","loading","state","questionIndex","removeItem","getArrayAnwers","dificult","difficulty","arrayAnwers","incorrect_answers","map","element","index","id","answer","correct_answer","sort","Math","random","answers","tick","seconds","time_limit","btnsDisable","prevState","testDificult","scoreSum","restTime","handleClick","target","correct","incorrect","btnClicked","innerText","assertionsget","scoreget","clearInterval","timer","nextQuestion","setInterval","milliseconds","prevProps","question","to","category","i","key","disabled","dispatch","getScore","getAssertions","Login","handleChange","value","validateButton","verify","test","length","actionApi","fetchAPI","actAddUser","addUser","setItem","onChange","placeholder","data","console","error","Ranking","rankingPlayers","Settings","App","logo","exact","path","component","INITIAL_STATE","action","rootReducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","window","Cypress","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d035157.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trivia.466d153e.png\";","import md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './Header.css';\n\nclass Header extends Component {\n  getGravatarEmail = (email) => md5(email).toString();\n\n  render() {\n    const { name, score, email } = this.props;\n    return (\n      <div className=\"header\">\n        <img\n          data-testid=\"header-profile-picture\"\n          src={ `https://www.gravatar.com/avatar/${this.getGravatarEmail(\n            email,\n          )}` }\n          alt={ `gravatar de ${email}` }\n        />\n        <span data-testid=\"header-player-name\">{ name }</span>\n        <span data-testid=\"header-score\">{ score }</span>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  name: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  email: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (store) => ({\n  name: store.player.name,\n  score: store.player.score,\n  email: store.player.gravatarEmail,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport './Feedback.css';\n\nclass Feedback extends React.Component {\n  render() {\n    const { assertions, score, history } = this.props;\n    const number = 3;\n    const testAssert = () => {\n      if (assertions < number) {\n        return 'Could be better...';\n      }\n      return 'Well Done!';\n    };\n    const assert = testAssert();\n    return (\n      <div>\n        <Header />\n        <div className=\"feedback\">\n          <h3 data-testid=\"feedback-text\">{ assert }</h3>\n          <p data-testid=\"feedback-total-score\">{ `Score: ${score}` }</p>\n          <p data-testid=\"feedback-total-question\">{ `Hits: ${assertions}` }</p>\n          <button\n            type=\"button\"\n            data-testid=\"btn-play-again\"\n            onClick={ () => history.push('/') }\n          >\n            Play Again\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"btn-ranking\"\n            onClick={ () => history.push('/ranking') }\n          >\n            Ranking\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nconst mapStateToProps = (store) => ({\n  assertions: store.player.assertions,\n  score: store.player.score,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n","export const ADD_USER = 'ADD_USER';\nexport const GETAPI = 'GETAPI';\nexport const GETQUESTIONS = 'GETQUESTIONS';\nexport const GET_SCORE = 'GET_SCORE';\nexport const GET_ASSERTIONS = 'GET_ASSERTIONS';\n\nexport const addUser = (payload) => ({\n  type: ADD_USER,\n  payload,\n});\n\nexport const getApi = (payload) => ({\n  type: GETAPI,\n  payload,\n});\n\nexport const getQuestions = (payload) => ({\n  type: GETQUESTIONS,\n  payload,\n});\n\nexport const getScore = (payload) => ({\n  type: GET_SCORE,\n  payload,\n});\n\nexport const getAssertions = (payload) => ({\n  type: GET_ASSERTIONS,\n  payload,\n});\n\nexport function fetchAPI(data) {\n  return async (dispatch) => {\n    try {\n      const response = await fetch('https://opentdb.com/api_token.php?command=request');\n      const payload = await response.json();\n      data = payload.token;\n      const token = dispatch(getApi(data));\n      return token;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { getAssertions, getScore } from '../redux/actions';\nimport './Game.css';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      redirect: false,\n      questions: [],\n      answers: [],\n      questionIndex: 0,\n      correct: '',\n      incorrect: '',\n      dificult: '',\n      seconds: 30,\n      restTime: 0,\n      btnClicked: false,\n      btnsDisable: false,\n    };\n    this.responseNumber = 3;\n    this.time_limit = 0;\n    this.milliseconds = 1000;\n  }\n\n  componentDidMount() {\n    this.fetchQuestions();\n    this.timer = setInterval(() => this.tick(), this.milliseconds);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { btnsDisable } = this.state;\n    if (prevState.seconds === this.time_limit || btnsDisable) {\n      clearInterval(this.timer);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  fetchQuestions = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      this.setState({ redirect: true });\n    }\n    if (token) {\n      const response = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n      const payload = await response.json();\n      this.setState({\n        questions: payload.results,\n        redirect: payload.response_code === this.responseNumber,\n        loading: false,\n      }, () => {\n        const { questions, questionIndex, redirect } = this.state;\n        if (!redirect) {\n          this.getArrayAnwers();\n          const dificult = questions[questionIndex].difficulty;\n          this.setState({ dificult });\n        } else {\n          localStorage.removeItem('token');\n        }\n      });\n    }\n  }\n\n  getArrayAnwers = () => {\n    const { questions, questionIndex } = this.state;\n    const number2 = 0.5;\n    const arrayAnwers = questions[questionIndex].incorrect_answers\n      .map((element, index) => ({ id: index, answer: element }));\n    arrayAnwers.push({ id: 4, answer: questions[questionIndex].correct_answer });\n    arrayAnwers.sort(() => Math.random() - number2);\n    this.setState({ answers: arrayAnwers });\n  }\n\n  tick = () => {\n    const { seconds } = this.state;\n    if (seconds === this.time_limit) {\n      this.setState({ btnsDisable: true, seconds: 0 });\n    } else {\n      this.setState(\n        (prevState) => ({\n          seconds: prevState.seconds - 1,\n        }),\n      );\n    }\n  };\n\n  testDificult = () => {\n    const { dificult } = this.state;\n    const hardN = 3;\n    if (dificult === 'hard') { return hardN; }\n    if (dificult === 'medium') { return 2; }\n    if (dificult === 'easy') { return 1; }\n  };\n\n  scoreSum = () => {\n    const ten = 10;\n    const { restTime, dificult } = this.state;\n    if (dificult) {\n      return (ten + (restTime * this.testDificult()));\n    }\n    return 0;\n  }\n\n  handleClick = ({ target }) => {\n    const { questions, questionIndex } = this.state;\n    this.setState((prevState) => ({\n      correct: 'greenCorrect',\n      incorrect: 'redIncorrect',\n      btnClicked: true,\n      seconds: prevState.seconds,\n      restTime: prevState.seconds,\n    }));\n    if (questions[questionIndex].correct_answer === target.innerText) {\n      this.setState({ dificult: questions[questionIndex].difficulty });\n      const { assertionsget, assertions, scoreget, score } = this.props;\n      assertionsget((assertions + 1));\n      const result = score + this.scoreSum();\n      scoreget(result);\n      clearInterval(this.timer);\n    }\n    clearInterval(this.timer);\n  }\n\n  nextQuestion = () => {\n    const { questionIndex } = this.state;\n    const finalQuestion = 4;\n    if (questionIndex === finalQuestion) {\n      const { history } = this.props;\n      history.push('/feedback');\n    } else {\n      this.setState({\n        questionIndex: questionIndex + 1,\n        correct: '',\n        incorrect: '',\n        btnsDisable: false,\n        btnClicked: false,\n        seconds: 30,\n      }, () => this.getArrayAnwers());\n      setInterval(() => this.tick(), this.milliseconds);\n    }\n  }\n\n  render() {\n    const { questions,\n      questionIndex,\n      answers,\n      redirect,\n      loading,\n      correct,\n      incorrect,\n      btnClicked,\n      btnsDisable,\n      seconds,\n    } = this.state;\n    const question = questions[questionIndex];\n    const number = 4;\n    if (loading) {\n      return (<p>Carregando...</p>);\n    }\n    if (redirect) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"game\">\n        <Header />\n        <div className=\"question\">\n          <h3 data-testid=\"question-category\">{`Category: ${question.category}`}</h3>\n          <h5 data-testid=\"question-text\">{question.question}</h5>\n          <div data-testid=\"answer-options\" className=\"answers\">\n            {\n              answers.map((element, i) => (\n                element.id === number\n                  ? (\n                    <button\n                      key={ i }\n                      type=\"button\"\n                      data-testid=\"correct-answer\"\n                      className={ correct }\n                      onClick={ this.handleClick }\n                      disabled={ btnsDisable }\n                    >\n                      {element.answer}\n                    </button>)\n                  : (\n                    <button\n                      key={ i }\n                      type=\"button\"\n                      data-testid={ `wrong-answer-${i}` }\n                      className={ incorrect }\n                      onClick={ this.handleClick }\n                      disabled={ btnsDisable }\n                    >\n                      {element.answer}\n                    </button>)))\n            }\n          </div>\n        </div>\n        <div className=\"timer\">\n          <span>{`Você tem ${seconds} segundos para responder!`}</span>\n          <div className=\"next\">\n            {btnClicked && (\n              <button\n                type=\"button\"\n                data-testid=\"btn-next\"\n                onClick={ this.nextQuestion }\n              >\n                Next\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nGame.propTypes = {\n  scoreget: PropTypes.func.isRequired,\n  assertionsget: PropTypes.func.isRequired,\n  score: PropTypes.number.isRequired,\n  assertions: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\nconst mapStateToProps = (store) => ({\n  score: store.player.score,\n  assertions: store.player.assertions,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  scoreget: (payload) => (dispatch(getScore(payload))),\n  assertionsget: (payload) => (dispatch(getAssertions(payload))),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addUser, fetchAPI } from '../redux/actions';\nimport './Login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      name: '',\n      disabled: true,\n    };\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value }, () => this.validateButton());\n  }\n\n  validateButton = () => {\n    const { email, name } = this.state;\n    const minimun = 3;\n    const re = /\\S+@\\S+\\.\\S+/;\n    const verify = re.test(email);\n    if (name.length > minimun && verify) {\n      this.setState({ disabled: false });\n    }\n  }\n\n  handleClick = async () => {\n    const { fetchAPI: actionApi, history, addUser: actAddUser } = this.props;\n    await actionApi();\n    const { token } = this.props;\n    localStorage.setItem('token', token);\n    actAddUser(this.state);\n    history.push('/game');\n  }\n\n  render() {\n    const { name, email, disabled } = this.state;\n    const { history } = this.props;\n    return (\n      <div className=\"login\">\n        <input\n          data-testid=\"input-player-name\"\n          type=\"text\"\n          name=\"name\"\n          value={ name }\n          onChange={ this.handleChange }\n          placeholder=\"Nome\"\n        />\n        <input\n          data-testid=\"input-gravatar-email\"\n          type=\"email\"\n          name=\"email\"\n          value={ email }\n          onChange={ this.handleChange }\n          placeholder=\"Email\"\n        />\n        <button\n          type=\"button\"\n          data-testid=\"btn-play\"\n          disabled={ disabled }\n          onClick={ this.handleClick }\n        >\n          Play\n        </button>\n        <button\n          type=\"submit\"\n          data-testid=\"btn-settings\"\n          onClick={ () => history.push('/settings') }\n        >\n          Configurações\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  token: state.player.token,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAPI: (data) => dispatch(fetchAPI(data)),\n  addUser: (payload) => dispatch(addUser(payload)),\n});\n\nLogin.propTypes = {\n  fetchAPI: PropTypes.func.isRequired,\n  addUser: PropTypes.func.isRequired,\n  token: PropTypes.string.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nclass Ranking extends Component {\n  render() {\n    const { history } = this.props;\n    const rankingPlayers = localStorage.getItem('ranking');\n    return (\n      <div>\n        <h1 data-testid=\"ranking-title\">Ranking</h1>\n        <button\n          type=\"button\"\n          data-testid=\"btn-go-home\"\n          onClick={ () => history.push('/') }\n        >\n          Home\n        </button>\n        {rankingPlayers && (\n          <div>\n            {\n              rankingPlayers.map((player, index) => (\n                <div key={ index }>\n                  <img src=\" \" alt=\"\" name=\"img-gravatar\" />\n                  <span data-testid={ `player-name-${index}` }>{player.name}</span>\n                  <span data-testid={ `player-score-${index}` }>{player.score}</span>\n                </div>\n              ))\n            }\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nRanking.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default Ranking;\n","import React from 'react';\n\nclass Settings extends React.Component {\n  render() {\n    return (\n      <div\n        data-testid=\"settings-title\"\n      >\n        Settings\n      </div>\n    );\n  }\n}\nexport default Settings;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport logo from './trivia.png';\nimport './App.css';\nimport Feedback from './pages/Feedback';\nimport Game from './pages/Game';\nimport Login from './pages/Login';\nimport Ranking from './pages/Ranking';\nimport Settings from './pages/Settings';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={ logo } className=\"App-logo\" alt=\"logo\" />\n        <p>SUA VEZ DE BRILHAR</p>\n      </header>\n      <Route exact path=\"/\" component={ Login } />\n      <Route path=\"/game\" component={ Game } />\n      <Route path=\"/settings\" component={ Settings } />\n      <Route path=\"/feedback\" component={ Feedback } />\n      <Route path=\"/ranking\" component={ Ranking } />\n\n    </div>\n  );\n}\n","import { ADD_USER, GETAPI, GET_ASSERTIONS, GET_SCORE } from '../actions';\n\nconst INITIAL_STATE = {\n  token: '',\n  name: '',\n  gravatarEmail: '',\n  score: 0,\n  assertions: 0,\n\n};\n\nconst player = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case GETAPI:\n    return {\n      ...state,\n      token: action.payload,\n    };\n  case ADD_USER:\n    return {\n      ...state,\n      name: action.payload.name,\n      gravatarEmail: action.payload.email,\n    };\n  case GET_SCORE:\n    return {\n      ...state,\n      score: action.payload,\n    };\n  case GET_ASSERTIONS:\n    return {\n      ...state,\n      assertions: action.payload,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default player;\n","import { combineReducers } from 'redux';\nimport player from './playReducer';\n\nconst rootReducer = combineReducers({\n  player,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}